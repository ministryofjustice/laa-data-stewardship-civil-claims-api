name: Preview OpenAPI Spec

on:
  push:
    branches:
      - 'openapi/**'

jobs:
  generate-swagger-ui:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: 'corretto'

      - name: Set up Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Generate Swagger UI
        run: ./gradlew -PswaggerOnly=true openApiGenerateSwaggerOnly

      - name: Copy Swagger UI to static folder
        run: |
          mkdir -p claims-data/swagger-ui-app/src/main/resources/static
          cp -r claims-data/api/build/generated/swagger-ui/* claims-data/swagger-ui-app/src/main/resources/static/

      - name: Build Swagger UI JAR
        run: ./gradlew  -PswaggerOnly=true :claims-data:swagger-ui-app:bootJar

      - name: Upload Swagger UI JAR
        uses: actions/upload-artifact@v4
        with:
          name: swagger-ui-jar
          path: claims-data/swagger-ui-app/build/libs/*.jar
          retention-days: 1

  build-push-docker:
    name: build and push docker image
    runs-on: ubuntu-latest
    needs:
      - generate-swagger-ui
    permissions:
      id-token: write
      contents: read
    steps:

      - uses: actions/checkout@v4

      - name: Download JAR artifact
        uses: actions/download-artifact@v4
        with:
          name: swagger-ui-jar
          path: claims-data/swagger-ui-app/build/libs/

        # ---------- AWS auth (OIDC) ----------
      - name: Configure AWS creds
        uses: aws-actions/configure-aws-credentials@v4.2.1
        with:
          role-to-assume: ${{ secrets.ECR_ROLE_TO_ASSUME }}
          aws-region: ${{  vars.ECR_REGION }}

      - name: Login to ECR
        uses: aws-actions/amazon-ecr-login@v2
        id: login-ecr
      - name: Build and push a Docker image for claims-data
        run: |
          docker build --no-cache -t $REGISTRY/$REPOSITORY:$IMAGE_TAG ./claims-data/swagger-ui-app
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: ${{ vars.ECR_REPOSITORY }}
          IMAGE_TAG: ${{ github.sha }}

  deploy-uat:
    runs-on: ubuntu-latest
    needs:
      - build-push-docker
    environment: uat
    permissions:
      id-token: write
      contents: read

    steps:

      - name: Checkout
        uses: actions/checkout@v4

      - name: Deploy UAT branch
        id: deploy_uat_branch
        uses: ./.github/actions/deploy_branch
        with:
          ecr-region: ${{ vars.ECR_REGION }}
          ecr-role-to-assume: ${{ secrets.ECR_ROLE_TO_ASSUME }}
          ecr-repository: ${{ vars.ECR_REPOSITORY }}
          kube-cert: ${{ secrets.KUBE_CERT }}
          kube-token: ${{ secrets.KUBE_TOKEN }}
          kube-cluster: ${{ secrets.KUBE_CLUSTER }}
          kube-namespace: ${{ secrets.KUBE_NAMESPACE }}
          app-environment: uat
